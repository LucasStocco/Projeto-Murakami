ğŸ“˜ Resumo â€“ IntroduÃ§Ã£o ao Desenvolvimento de Sistemas Web
ğŸ”¹ Unidade 1 â€“ IntroduÃ§Ã£o ao Desenvolvimento de Sistemas Web
TÃ³pico 1 â€“ Internet

Origens: nasceu com a ARPANET (anos 1960), projeto militar dos EUA â†’ base do TCP/IP (Robert Kahn e Vint Cerf).

E-mail (1972) foi a primeira aplicaÃ§Ã£o.

WWW (1989 â€“ Tim Berners-Lee): sistema de hipertexto acessado via navegador.

No Brasil: chegou em 1988 em universidades; uso comercial sÃ³ em 1994 (Embratel).

Funcionamento:

TCP/IP â†’ garante a comunicaÃ§Ã£o entre redes diferentes.

DNS (Domain Name System) â†’ traduz nomes de sites em IPs.

HTTP â†’ protocolo que permite a navegaÃ§Ã£o na web.

TÃ³pico 2 â€“ Desenvolvimento para Web

HTML â†’ estrutura e conteÃºdo.

XHTML â†’ versÃ£o mais rigorosa do HTML (baseada em XML).

CSS â†’ estilo e layout.

JavaScript e Web APIs â†’ interaÃ§Ã£o e dinamismo.

PadrÃµes Web (W3C) â†’ garantem acessibilidade, usabilidade e compatibilidade entre navegadores.

Acessibilidade â†’ uso adequado de alt em imagens, contraste, navegaÃ§Ã£o por teclado etc.

Web MÃ³vel â†’ design responsivo para celulares/tablets.

Browsers â†’ Chrome, Firefox, Safari, Edge, Opera etc.

TÃ³pico 3 â€“ Ferramentas e Linguagens

Ferramentas de ediÃ§Ã£o:

Notepad++, NetBeans, Dreamweaver, Aptana, Komodo, MS Expression Web .

Linguagens server-side:

ASP, PHP (1995, Rasmus Lerdorf, scripts dinÃ¢micos lado servidor), JSP (Java Server Pages).

Linguagens client-side: HTML, CSS, JavaScript .

Servidores Web: Apache, IIS .

ğŸ”¹ Unidade 2 â€“ HTML (HyperText Markup Language)
Fundamentos

Estrutura: <!DOCTYPE>, <html>, <head>, <body>.

Elementos bÃ¡sicos: tÃ­tulos (<h1>-<h6>), parÃ¡grafos (<p>), links (<a>), imagens (<img>).

ComentÃ¡rios: <!-- ... -->.

FormataÃ§Ã£o

Quebras de linha: <br>.

Estilos inline (ex: <p style="color:red;">).

Negrito (<b>, <strong>), itÃ¡lico (<i>, <em>), sublinhado (<u>).

Listas: ordenadas <ol>, nÃ£o ordenadas <ul>, de definiÃ§Ã£o <dl>.

Tabelas: <table>, <tr>, <td>, <th>.

FormulÃ¡rios: <form>, <input>, <textarea>, <select>, <button>.

Tornando a pÃ¡gina interativa

Links com <a href="">.

Frames (hoje obsoletos).

FormulÃ¡rios para interaÃ§Ã£o usuÃ¡rio-servidor.

Listas e tabelas para organizaÃ§Ã£o de dados .

ğŸ”¹ Unidade 3 â€“ CSS e JavaScript
CSS (Cascading Style Sheets)

FunÃ§Ã£o: separar conteÃºdo (HTML) de apresentaÃ§Ã£o (estilo).

Estrutura: seletor { propriedade: valor; }.

Formas de uso:

Externa: arquivo .css linkado no <head>.

Interna: dentro de <style>.

Inline: no prÃ³prio elemento HTML.

Principais propriedades:

Texto: color, font-family, font-size, text-align, text-decoration.

Fundo: background-color, background-image, background-repeat, background-position .

Listas e tabelas podem ter estilos personalizados.

JavaScript

FunÃ§Ã£o: dar comportamento Ã s pÃ¡ginas (eventos, validaÃ§Ãµes, interatividade).

CaracterÃ­sticas:

Linguagem client-side (executada no navegador).

Declarada entre <script> ... </script>.

Manipula elementos HTML e CSS via DOM.

Conceitos bÃ¡sicos:

VariÃ¡veis: var, let, const.

Eventos: onclick, onmouseover.

Estruturas de controle: if, else, for, while .

ğŸ“Œ Pontos-chave para sua prova

Internet: origem (ARPANET), protocolos (TCP/IP, HTTP), DNS, chegada ao Brasil.

HTML: estrutura bÃ¡sica, tags principais, listas, tabelas, formulÃ¡rios.

CSS: seletor, propriedade e valor; diferenÃ§as entre inline, interna e externa; principais propriedades (texto, fundo, listas).

JavaScript: dinamismo, variÃ¡veis, eventos, estruturas de controle.

Ferramentas: editores (Notepad++, NetBeans, Dreamweaver), servidores (Apache, IIS).

PadrÃµes Web (W3C): usabilidade, acessibilidade, responsividade.

Linguagens server-side: ASP, PHP, JSP.